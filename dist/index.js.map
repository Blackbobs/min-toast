{"version":3,"file":"index.js","sources":["../src/utils/ToastManager.ts","../src/components/Toast.tsx","../src/providers/ToastProvider.tsx","../src/hooks/useToastNotifications.tsx"],"sourcesContent":["// src/utils/ToastManager.ts\nclass ToastManager {\n    private toast: { type: \"success\" | \"error\" | \"warning\" | \"info\", message: string, description: string } | null = null;\n    private toastTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  \n    showToast(type: \"success\" | \"error\" | \"warning\" | \"info\", message: string, description: string) {\n      if (this.toastTimeout) {\n        clearTimeout(this.toastTimeout);\n      }\n  \n      this.toast = { type, message, description };\n  \n      // Automatically hide the toast after 5 seconds\n      this.toastTimeout = setTimeout(() => {\n        this.hideToast();\n      }, 5000);\n    }\n  \n    hideToast() {\n      this.toast = null;\n    }\n  \n    getToast() {\n      return this.toast;\n    }\n  }\n  \n  const toastManager = new ToastManager();\n  export default toastManager;\n  ","import React from 'react';\nimport { MdClose } from 'react-icons/md';\nimport {\n  IoCheckmarkCircle,\n  IoCloseCircleSharp,\n  IoInformation,\n} from 'react-icons/io5';\nimport { IoIosWarning } from 'react-icons/io';\n\ninterface ToastProps {\n  type: 'success' | 'error' | 'warning' | 'info';\n  message: string;\n  description?: string;\n}\n\nexport const Toast: React.FC<ToastProps> = ({ type, message, description }) => {\n  const checkType = () => {\n    switch (type) {\n      case 'success':\n        return <IoCheckmarkCircle size={25} color=\"#00ff00\" />;\n      case 'error':\n        return <IoCloseCircleSharp size={25} color=\"#ff0000\" />;\n      case 'info':\n        return <IoInformation size={25} color=\"#0000ff\" />;\n      case 'warning':\n        return <IoIosWarning size={25} color=\"#FFEB3B\" />;\n      default:\n        return <IoCheckmarkCircle size={25} color=\"#00ff00\" />;\n    }\n  };\n\n  return (\n    <div className=\"w-[358px] md:w-[452px] h-[90px] rounded-lg bg-white p-5 my-3 mx-auto border border-[#E4E4E4] shadow shadow-[rgba(0,0,0,0.1)] flex items-center gap-5\">\n      {checkType()}\n      <div className=\"flex-1 flex flex-col items-start gap-1\">\n        <h2 className=\"text-nowrap font-semibold text-gray-950 leading-5 text-[14px]\">\n          {message}\n        </h2>\n        {description && (\n          <p className=\"font-normal leading-4 text-[12px] text-nowrap text-gray-700\">\n            {description}\n          </p>\n        )}\n      </div>\n      <MdClose size={25} color=\"#73737F\" role=\"button\" aria-label=\"Close toast\" />\n    </div>\n  );\n};\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport toastManager from '../utils/ToastManager';\nimport { Toast } from '../components/Toast';\n\ninterface ToastProviderProps {\n  children: ReactNode;\n}\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n  const [toast, setToast] = useState<{ type: \"success\" | \"error\" | \"warning\" | \"info\", message: string, description: string } | null>(null);\n\n  // Sync state with ToastManager\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentToast = toastManager.getToast();\n      if (currentToast && currentToast !== toast) {\n        setToast(currentToast);\n      }\n    }, 100); \n\n    return () => clearInterval(interval);\n  }, [toast]);\n\n  return (\n    <div>\n      {toast && (\n        <div className=\"fixed top-0 left-1/2 -translate-x-1/2 flex items-center justify-center w-full z-[999999]\">\n          <Toast\n            type={toast.type}\n            message={toast.message}\n            description={toast.description}\n          />\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n","// src/hooks/useToastNotifications.ts\nimport toastManager from '../utils/ToastManager';\n\nconst successToast = (message: string, description: string) => {\n  toastManager.showToast('success', message, description);\n};\n\nconst errorToast = (message: string, description: string) => {\n  toastManager.showToast('error', message, description);\n};\n\nconst infoToast = (message: string, description: string) => {\n  toastManager.showToast('info', message, description);\n};\n\nconst warningToast = (message: string, description: string) => {\n  toastManager.showToast('warning', message, description);\n};\n\nexport { successToast, errorToast, infoToast, warningToast };\n"],"names":["toastManager","constructor","this","toast","toastTimeout","showToast","type","message","description","clearTimeout","setTimeout","hideToast","getToast","Toast","_jsxs","jsxs","Object","assign","className","_jsx","IoCheckmarkCircle","size","color","IoCloseCircleSharp","IoInformation","IoIosWarning","checkType","children","jsx","MdClose","role","setToast","useState","useEffect","interval","setInterval","currentToast","clearInterval"],"mappings":"wJA4BE,MAAMA,EAAe,IA3BvB,MAAA,WAAAC,GACYC,KAAKC,MAAoG,KACzGD,KAAYE,aAAyC,KAG7D,SAAAC,CAAUC,EAAgDC,EAAiBC,GACrEN,KAAKE,cACPK,aAAaP,KAAKE,cAGpBF,KAAKC,MAAQ,CAAEG,OAAMC,UAASC,eAG9BN,KAAKE,aAAeM,YAAW,KAC7BR,KAAKS,WAAW,GACf,KAGL,SAAAA,GACET,KAAKC,MAAQ,KAGf,QAAAS,GACE,OAAOV,KAAKC,QCTLU,EAA8B,EAAGP,OAAMC,UAASC,iBAiBzDM,EAAKC,KAAA,MAAAC,OAAAC,OAAA,CAAAC,UAAU,mKAhBC,MAChB,OAAQZ,GACN,IAAK,UAQL,QACE,OAAOa,EAAAA,IAACC,EAAAA,kBAAiB,CAACC,KAAM,GAAIC,MAAM,YAP5C,IAAK,QACH,OAAOH,EAAAA,IAACI,EAAAA,mBAAkB,CAACF,KAAM,GAAIC,MAAM,YAC7C,IAAK,OACH,OAAOH,EAAAA,IAACK,EAAAA,cAAa,CAACH,KAAM,GAAIC,MAAM,YACxC,IAAK,UACH,OAAOH,EAAAA,IAACM,EAAAA,aAAY,CAACJ,KAAM,GAAIC,MAAM,YAGxC,EAKEI,GACDZ,EAAAC,KAAA,MAAAC,OAAAC,OAAA,CAAKC,UAAU,0CACb,CAAAS,SAAA,CAAAR,EAAAA,IAAA,KAAAH,OAAAC,OAAA,CAAIC,UAAU,iEAA+D,CAAAS,SAC1EpB,KAEFC,GACCW,EAAAA,IAAG,IAAAH,OAAAC,OAAA,CAAAC,UAAU,+DAA6D,CAAAS,SACvEnB,SAIPW,EAACS,IAAAC,EAAOA,QAAC,CAAAR,KAAM,GAAIC,MAAM,UAAUQ,KAAK,SAAQ,aAAY,0CCpCP,EAAGH,eAC5D,MAAOxB,EAAO4B,GAAYC,EAAAA,SAA0G,MAcpI,OAXAC,EAAAA,WAAU,KACR,MAAMC,EAAWC,aAAY,KAC3B,MAAMC,EAAepC,EAAaY,WAC9BwB,GAAgBA,IAAiBjC,GACnC4B,EAASK,EACV,GACA,KAEH,MAAO,IAAMC,cAAcH,EAAS,GACnC,CAAC/B,IAGFW,EAAAA,KACG,MAAA,CAAAa,SAAA,CAAAxB,GACCgB,EAAAA,yBAAKD,UAAU,4FAA0F,CAAAS,SACvGR,MAACN,EAAK,CACJP,KAAMH,EAAMG,KACZC,QAASJ,EAAMI,QACfC,YAAaL,EAAMK,iBAIxBmB,IACG,qBC5BS,CAACpB,EAAiBC,KACnCR,EAAaK,UAAU,QAASE,EAASC,EAAY,oBAGrC,CAACD,EAAiBC,KAClCR,EAAaK,UAAU,OAAQE,EAASC,EAAY,uBATjC,CAACD,EAAiBC,KACrCR,EAAaK,UAAU,UAAWE,EAASC,EAAY,uBAWpC,CAACD,EAAiBC,KACrCR,EAAaK,UAAU,UAAWE,EAASC,EAAY"}